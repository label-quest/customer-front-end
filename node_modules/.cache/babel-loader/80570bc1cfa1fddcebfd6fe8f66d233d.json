{"ast":null,"code":"import _classCallCheck from \"/home/anixon604/dev/dropzone-redux-form-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anixon604/dev/dropzone-redux-form-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anixon604/dev/dropzone-redux-form-example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anixon604/dev/dropzone-redux-form-example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anixon604/dev/dropzone-redux-form-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anixon604/dev/dropzone-redux-form-example/src/App.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport Dropzone from 'react-dropzone';\nvar FILE_FIELD_NAME = 'files';\n\nvar renderDropzoneInput = function renderDropzoneInput(field) {\n  var files = field.input.value;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Dropzone, {\n    name: field.name,\n    onDrop: function onDrop(filesToUpload, e) {\n      return field.input.onChange(filesToUpload);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Drop a files here, or click to select file to upload.\")), field.meta.touched && field.meta.error && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, field.meta.error), files && Array.isArray(files) && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, files.map(function (file, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, file.name);\n  })));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"onSubmit\",\n    // POST customer ID and images archive\n    value: function onSubmit(data) {\n      var body = new FormData();\n      Object.keys(data).forEach(function (key) {\n        body.append(key, data[key]);\n      });\n      console.info('POST', body, data);\n      console.info('This is expected to fail:');\n      fetch(\"http://labelquest.com/send/\", {\n        method: 'POST',\n        body: body\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return console.log(res);\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    } // GET statistics to show to Client\n    // Maybe get an array of hits per label\n    // getStatistics() {\n    //   fetch('http://labelquest.com/get/')\n    //     .then(stats => stats.map(key, index){\n    //       //put unwrap here\n    //       //display bar-graph per label\n    //     }).catch(err => console.error(err));\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          reset = _this$props.reset;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"LabelQuest Client Interface\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Client ID\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"clientID\",\n        component: \"input\",\n        type: \"text\",\n        placeholder: \"Client ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: FILE_FIELD_NAME,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Upload Image Archive\"), React.createElement(Field, {\n        name: FILE_FIELD_NAME,\n        component: renderDropzoneInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        onClick: reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Clear Values\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.getStatistics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Get Label getStatistics\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nApp.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired\n};\nexport default reduxForm({\n  form: 'simple'\n})(App);","map":{"version":3,"sources":["/home/anixon604/dev/dropzone-redux-form-example/src/App.js"],"names":["React","Component","PropTypes","reduxForm","Field","Dropzone","FILE_FIELD_NAME","renderDropzoneInput","field","files","input","value","name","filesToUpload","e","onChange","meta","touched","error","Array","isArray","map","file","i","App","data","body","FormData","Object","keys","forEach","key","append","console","info","fetch","method","then","res","json","log","catch","err","props","handleSubmit","reset","onSubmit","bind","getStatistics","propTypes","func","isRequired","form"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes, } from 'react';\nimport { reduxForm, Field } from 'redux-form';\n\nimport Dropzone from 'react-dropzone';\n\nconst FILE_FIELD_NAME = 'files';\n\nconst renderDropzoneInput = (field) => {\n  const files = field.input.value;\n  return (\n    <div>\n      <Dropzone\n        name={field.name}\n        onDrop={( filesToUpload, e ) => field.input.onChange(filesToUpload)}\n      >\n        <div>Drop a files here, or click to select file to upload.</div>\n      </Dropzone>\n      {field.meta.touched &&\n        field.meta.error &&\n        <span className=\"error\">{field.meta.error}</span>}\n      {files && Array.isArray(files) && (\n        <ul>\n          { files.map((file, i) => <li key={i}>{file.name}</li>) }\n        </ul>\n      )}\n    </div>\n  );\n}\n\nclass App extends Component {\n\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  // POST customer ID and images archive\n  onSubmit(data) {\n    var body = new FormData();\n    Object.keys(data).forEach(( key ) => {\n      body.append(key, data[ key ]);\n    });\n\n    console.info('POST', body, data);\n    console.info('This is expected to fail:');\n    fetch(`http://labelquest.com/send/`, {\n      method: 'POST',\n      body: body,\n    })\n    .then(res => res.json())\n    .then(res => console.log(res))\n    .catch(err => console.error(err));\n  }\n\n  // GET statistics to show to Client\n  // Maybe get an array of hits per label\n  // getStatistics() {\n  //   fetch('http://labelquest.com/get/')\n  //     .then(stats => stats.map(key, index){\n  //       //put unwrap here\n  //       //display bar-graph per label\n  //     }).catch(err => console.error(err));\n  // }\n\n  render() {\n    const {\n      handleSubmit,\n      reset,\n    } = this.props;\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n        <div>\n        <h1>LabelQuest Client Interface</h1>\n        <label>Client ID</label>\n        <div>\n          <Field\n            name=\"clientID\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Client ID\"\n          />\n        </div>\n      </div>\n        <div>\n          <p></p>\n          <label htmlFor={FILE_FIELD_NAME}>Upload Image Archive</label>\n          <Field\n            name={FILE_FIELD_NAME}\n            component={renderDropzoneInput}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">\n            Submit\n          </button>\n          <button onClick={reset}>\n            Clear Values\n          </button>\n        </div>\n        <p></p>\n        <button onClick={this.getStatistics}>\n        Get Label getStatistics\n        </button>\n\n      </form>\n\n      \n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'simple',\n})(App);\n"]},"metadata":{},"sourceType":"module"}